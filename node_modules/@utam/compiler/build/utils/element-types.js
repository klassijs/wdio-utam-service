"use strict";
/*
 * Copyright (c) 2021, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.wrapSingleBasicTypeInArray = exports.isFrameElement = exports.isContainerElement = exports.isCustomType = exports.isCustomTypePredicate = exports.VALID_CUSTOM_TYPE = exports.isBasicElement = void 0;
const shared_1 = require("../codegen/shared");
const element_actions_1 = require("./element-actions");
function isBasicElement(type) {
    return Array.isArray(type) || element_actions_1.BASIC_ELEMENT_TYPES.includes(type);
}
exports.isBasicElement = isBasicElement;
exports.VALID_CUSTOM_TYPE = /^@?[\w-/]+$/;
const isCustomTypePredicate = (type) => type.includes('-') || type.includes('/');
exports.isCustomTypePredicate = isCustomTypePredicate;
function isCustomType(type) {
    return typeof type === 'string' && exports.isCustomTypePredicate(type);
}
exports.isCustomType = isCustomType;
function isContainerElement(value) {
    return typeof value === 'string' && value === shared_1.UTAM_CONTAINER_TYPE;
}
exports.isContainerElement = isContainerElement;
function isFrameElement(type) {
    return typeof type === 'string' && type === shared_1.UTAM_FRAME_ELEMENT_TYPE;
}
exports.isFrameElement = isFrameElement;
function wrapSingleBasicTypeInArray(type) {
    return Array.isArray(type) ? type : [type];
}
exports.wrapSingleBasicTypeInArray = wrapSingleBasicTypeInArray;
//# sourceMappingURL=element-types.js.map