import { ArgumentType, MatcherType } from '@utam/types';
import { ElementActionType, ExternalActionType } from './element-actions';
export declare function getMatcherType(matcherType: string): MatcherType | undefined;
/**
 * depending on matcher type return expected matcher args types
 * @param structure
 * @param matcherType
 */
export declare function getMatcherExpectedArgs(matcherType: MatcherType): ArgumentType[] | undefined;
export declare function getCompatibleMatchers(actionType: ElementActionType | ExternalActionType): MatcherType[];
export declare function generateMatcherCode(matcherType: MatcherType, explicitArgumentsCode: string): string;
/**
 * helper to build code of the filter method
 * @param matcherType type of the matcher
 * @param filterApplyCode with method invoked in a filter, ex. "await element.${apply}(${applyArgs})"
 * @param filterArg filter argument value
 * @returns generated code for a filter application
 */
export declare function buildFilterFunctionCode(matcherType: MatcherType, filterApplyCode: string, filterArg: string): string;
//# sourceMappingURL=matchers.d.ts.map