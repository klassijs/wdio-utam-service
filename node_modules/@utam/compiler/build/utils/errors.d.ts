import { GenericDiagnostic, Position } from '@utam/diagnostics';
export declare class UtamValidationError extends Error {
    position?: Position;
    utamError: boolean;
    constructor(diagnostic: GenericDiagnostic);
}
/**
 * error thrown in Json validation phase using error codes
 */
export declare class UtamCompilerValidationError extends UtamValidationError {
    constructor({ offset }: {
        offset: number;
    }, errCode: number, args?: string[]);
}
/**
 * error thrown during validation of Json (prior to generation)
 */
export declare class UtamSchemaValidationError extends UtamValidationError {
    constructor(diagnostic: GenericDiagnostic);
}
/**
 * error thrown by Json parser
 */
export declare class UtamJsonValidationError extends UtamValidationError {
    json: boolean;
    constructor(diagnostic: GenericDiagnostic);
}
export declare function calculatePositionFromSource(error: UtamSchemaValidationError, source: string): Position | undefined;
//# sourceMappingURL=errors.d.ts.map