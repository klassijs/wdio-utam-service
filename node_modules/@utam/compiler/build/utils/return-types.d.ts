import { UtamInterfaceReturnType, UtamMethodAction, UtamStatementElementType, TypeNamesTracker } from '@utam/types';
import { ElementMethodAst } from '../codegen/helpers/class-body-generator';
import { UTAM_RETURN_CATEGORY_CUSTOM_ELEMENT, UTAM_RETURN_CATEGORY_BASIC_ELEMENT, UTAM_RETURN_CATEGORY_PRIMITIVE, UTAM_RETURN_CATEGORY_FRAME_ELEMENT, UTAM_RETURN_CATEGORY_VOID, UTAM_RETURN_CATEGORY_SELF, UTAM_RETURN_CATEGORY_PAGE_OBJECT, UTAM_RETURN_CATEGORY_ROOT_PAGE_OBJECT } from '../codegen/shared';
export declare const RETURN_TYPE_VOID: ReturnType;
declare type ReturnTypeCategory = typeof UTAM_RETURN_CATEGORY_PRIMITIVE | typeof UTAM_RETURN_CATEGORY_BASIC_ELEMENT | typeof UTAM_RETURN_CATEGORY_CUSTOM_ELEMENT | typeof UTAM_RETURN_CATEGORY_FRAME_ELEMENT | typeof UTAM_RETURN_CATEGORY_VOID | typeof UTAM_RETURN_CATEGORY_SELF | typeof UTAM_RETURN_CATEGORY_PAGE_OBJECT | typeof UTAM_RETURN_CATEGORY_ROOT_PAGE_OBJECT;
/**
 * Method or statement return type. Can be inferred.
 */
export interface ReturnType {
    /**
     * string with type name, for example 'string' or 'MyObject'
     */
    returnTypeValue: string;
    /**
     * category of the return type. affects what's being imported.
     */
    returnTypeKind: ReturnTypeCategory;
}
/**
 * Get abstract method return type from the declared returnType
 *
 * @param returnType return type declared in the page object
 * @param typesTracker tracks names collisions
 * @returns the TypeScript type name returned by the method
 */
export declare function getExplicitReturnType(returnType: UtamInterfaceReturnType, typesTracker: TypeNamesTracker): ReturnType;
declare type GenerateReturnTypeFn = (composeAction: UtamMethodAction, elementType?: UtamStatementElementType) => ReturnType;
/**
 * Return type generator for compose statement
 * @param typesTracker
 * @param elementMethodsAst
 * @returns
 */
export declare function createReturnTypeGenerator(typesTracker: TypeNamesTracker, elementMethodsAst?: ElementMethodAst[]): GenerateReturnTypeFn;
export {};
//# sourceMappingURL=return-types.d.ts.map