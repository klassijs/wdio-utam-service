"use strict";
/*
 * Copyright (c) 2021, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.compileFromPath = exports.compile = exports.replaceTypeString = exports.textToJsDoc = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const page_object_1 = require("./codegen/page-object");
const naming_1 = require("./utils/naming");
const page_object_2 = require("./validate/page-object");
const normalize_config_1 = require("./utils/normalize-config");
var jsdoc_transformers_1 = require("./utils/jsdoc-transformers");
Object.defineProperty(exports, "textToJsDoc", { enumerable: true, get: function () { return jsdoc_transformers_1.textToJsDoc; } });
var imports_1 = require("./utils/imports");
Object.defineProperty(exports, "replaceTypeString", { enumerable: true, get: function () { return imports_1.replaceTypeString; } });
function compile(jsonSource, pageObjectMeta, config = {}, alias = {}) {
    const normalizedConfig = normalize_config_1.normalizeCompilerConfig(config);
    const pageObject = page_object_2.validatePageObject(jsonSource);
    const { code, typeDefinition } = page_object_1.generatePageObject(pageObject, pageObjectMeta, normalizedConfig, alias);
    return { code, typeDefinition, pageObject };
}
exports.compile = compile;
function compileFromPath(pageObjectPath, commentsOptions, config = {}, alias = {}) {
    const sourceText = fs_1.default.readFileSync(pageObjectPath, 'utf8');
    const fileName = path_1.default.basename(pageObjectPath);
    const [pageObjectName] = fileName.split('.');
    const name = naming_1.capitalize(naming_1.kebabcaseToCamelcase(pageObjectName));
    return compile(sourceText, { name, commentsOptions }, config, alias);
}
exports.compileFromPath = compileFromPath;
//# sourceMappingURL=index.js.map