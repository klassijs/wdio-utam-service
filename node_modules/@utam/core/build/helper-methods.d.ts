import { PageObjectCtor } from '.';
import { Locator } from './lib/by';
import { Driver, SerializableOrElement } from './lib/driver';
import { Element } from './lib/element';
import { UtamBasePageObject } from './utam-page-object';
interface WaitConfig {
    opt_timeout?: number;
    opt_interval?: number;
    opt_message?: string;
}
/**
 * custom polling wait
 * This code is a version of Selenium wait:
 * https://github.com/SeleniumHQ/selenium/blob/trunk/javascript/node/selenium-webdriver/lib/webdriver.js
 */
export declare function wait<T>(condition: Promise<T> | ((...args: SerializableOrElement[]) => T | Promise<T>), { opt_timeout, opt_message, opt_interval }: WaitConfig, ...args: SerializableOrElement[]): Promise<T>;
export declare function createInstanceAndWaitForRoot<T extends UtamBasePageObject>(Ctor: PageObjectCtor<T>, driver: Driver, element?: Element, locator?: Locator): Promise<T>;
export declare function createInstance<T extends UtamBasePageObject>(Ctor: PageObjectCtor<T>, driver: Driver, element?: Element, locator?: Locator): Promise<T>;
export {};
//# sourceMappingURL=helper-methods.d.ts.map