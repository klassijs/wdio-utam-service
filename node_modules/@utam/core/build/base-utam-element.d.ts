import { Driver } from './lib/driver';
import { Element, ElementRectangle } from './lib/element';
import { UtamBase } from './utam-base';
/**
 * base class for a Page Object element.
 * contains methods to get element state, actions like blur or focus are part of Actionable type
 */
export declare class BaseUtamElement extends UtamBase {
    constructor(driver: Driver, element: Element);
    protected getElement(): Element;
    getAttribute(attributeName: string): Promise<string | null>;
    getClassAttribute(): Promise<string | null>;
    /**
     * Returns the CSS property value from the given CSS Property name
     * @param cssStyleProperty css property name
     * @returns the CSS property value when the property is found, an empty string otherwise
     */
    getCssPropertyValue(cssStyleProperty: string): Promise<string | null>;
    getText(): Promise<string | null>;
    getTitle(): Promise<string | null>;
    getValue(): Promise<string | null>;
    isEnabled(): Promise<boolean>;
    /**
     * if invoked on the element without shadowRoot, check if current element is active inside driver
     * otherwise check if current element is same as shadowHost.shadowRoot.activeElement
     * @see https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/activeElement
     * @return true if current element is active
     */
    isFocused(): Promise<boolean>;
    /**
     * get element size and location
     * @returns element size and location
     */
    getRect(): Promise<ElementRectangle>;
}
//# sourceMappingURL=base-utam-element.d.ts.map