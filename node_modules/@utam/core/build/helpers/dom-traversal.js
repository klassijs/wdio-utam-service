"use strict";
/*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.isElementAttachedToDom = void 0;
/**
 * traverse DOM to define if element still attached
 *
 * note: method should be in this file to avoid cross dependencies from typescript
 * @param driver instance of driver adapter
 * @param element instance of element adapter
 * @returns boolean true if element is not stale
 */
async function isElementAttachedToDom(driver, element) {
    const STALE_ELEMENT_ERROR = 'stale element reference';
    try {
        // In order to implement isPresent we simply walk up though the DOM structure (including shadows)
        // If we do reach the root document, the DOM element is connected or present
        const isPresentResult = await driver.executeScript(function _isPresent(element) {
            // inline this function here for simplicity (will be parsed every time this method its invoked)
            function connectedToDocument(node, docTarget = document) {
                if (!node) {
                    return false;
                }
                else if (node.parentNode) {
                    return connectedToDocument(node.parentNode, docTarget);
                }
                else if (node.host) {
                    return connectedToDocument(node.host, docTarget);
                }
                else {
                    return node === docTarget;
                }
            }
            return connectedToDocument(element, document);
        }, element);
        return isPresentResult;
    }
    catch (err) {
        if (err.name.includes(STALE_ELEMENT_ERROR) || err.toString().includes(STALE_ELEMENT_ERROR)) {
            return false;
        }
        else {
            throw err;
        }
    }
}
exports.isElementAttachedToDom = isElementAttachedToDom;
//# sourceMappingURL=dom-traversal.js.map