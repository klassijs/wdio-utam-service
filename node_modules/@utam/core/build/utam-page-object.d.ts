import { DocumentUtamElement } from './document-utam-element';
import { Locator } from './lib/by';
import { Driver } from './lib/driver';
import { Element } from './lib/element';
import { NavigationUtamElement } from './navigation-utam-element';
import { UtamBase } from './utam-base';
/**
 * Represents Page Objects contructor functions
 * @remark & typeof UtamBasePageObject adds static properties to the type
 */
export declare type PageObjectCtor<T extends UtamBasePageObject> = {
    new (...args: ConstructorParameters<typeof UtamBasePageObject>): T;
} & typeof UtamBasePageObject;
/**
 * base class for all Page Objects
 */
export declare class UtamBasePageObject extends UtamBase {
    constructor(driver: Driver, element?: Element, locator?: Locator);
    protected __beforeLoad__(): Promise<void>;
    protected getRootElement(): Promise<Element>;
    protected getDocument(): DocumentUtamElement;
    protected getNavigation(): NavigationUtamElement;
}
/**
 * root Page Object represent higher order Page Objects that are located
 * directly inside browser or driver root
 */
export declare class UtamBaseRootPageObject extends UtamBasePageObject {
    getRootElement(): Promise<Element>;
    isPresent(): Promise<boolean>;
    __getRootLocator__(): Locator;
    protected __beforeLoad__(): Promise<void>;
}
//# sourceMappingURL=utam-page-object.d.ts.map