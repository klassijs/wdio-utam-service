"use strict";
/*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BASIC_TYPE_RULES = exports.DEFAULT_CONFIG_OPTIONS = exports.DEFAULT_INPUT_FILE_MASKS = void 0;
exports.DEFAULT_INPUT_FILE_MASKS = ['**/*.html'];
/**
 * Default generation options
 */
exports.DEFAULT_CONFIG_OPTIONS = {
    namespaces: {},
    defaultNamespace: 'utam/pageObjects/',
    generateCustomContent: false,
    // can add: div, span, thead, tbody
    includeTags: [
        'a',
        'body',
        'button',
        'footer',
        'form',
        'header',
        'iframe',
        'input',
        'label',
        'li',
        'menu',
        'menuItem',
        'ol',
        'ul',
        'option',
        'section',
        'select',
        'slot',
        'table',
        'td',
        'textarea',
        'th',
        'tr',
        'title',
    ],
    includeClasses: ['slds-required'],
    includeAttributes: ['id', 'data-aura-class', 'data-element-id', 'name', 'slot'],
    ignoreCustomTags: [],
    createScopeElement: true,
    descriptionAuthor: 'UTAM generator',
    addMethodDescription: true,
    rootSelectors: ['form', 'html', 'body'],
    containerSelector: 'slot > *',
};
/**
 * These rules define how to assign basic type to the element based on its tag and attributes
 */
exports.BASIC_TYPE_RULES = [
    {
        type: ['actionable', 'clickable'],
        rule: {
            tagNames: ['input'],
            attrValues: {
                type: ['button', 'checkbox', 'radio', 'reset', 'submit'],
            },
        },
    },
    {
        type: ['actionable', 'clickable'],
        rule: {
            tagNames: ['button', 'a', 'area', 'li', 'option', 'menuItem'],
        },
    },
    {
        type: ['actionable', 'clickable', 'editable'],
        rule: {
            tagNames: ['textarea', 'input', 'select'],
        },
    },
    {
        type: 'frame',
        rule: {
            tagNames: ['iframe'],
        },
    },
    {
        type: ['actionable', 'clickable'],
        rule: {
            attrNames: ['onclick'],
        },
    },
    {
        type: ['actionable', 'clickable', 'editable'],
        rule: {
            attrNames: ['ondblclick'],
        },
    },
    {
        type: ['actionable', 'editable'],
        rule: {
            attrNames: ['onkeydown', 'onkeypress'],
        },
    },
    {
        type: 'actionable',
        rule: {
            attrNames: ['onchange'],
        },
    },
    {
        type: [],
        rule: {
            tagNames: ['td', 'th', 'tr'],
        },
    },
    {
        type: [],
        rule: {
            attrNames: ['data-aura-class'],
        },
    },
];
//# sourceMappingURL=constants.js.map