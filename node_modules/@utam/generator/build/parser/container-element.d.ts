import { Element } from '../utils/parser-wrapper';
import { UtamElementType, UtamElement, UtamPageObject, GeneratorConfigOptions } from '@utam/types';
/**
 * Build name of the generated container element.
 * If slot has name, use name, otherwise use name of the parent node.
 * @param element element itself
 * @param scopeElement parent of the container
 * @returns string with name
 */
export declare function buildContainerElementName(element: Element, scopeElement: UtamElement | UtamPageObject): string;
/**
 * Build relative selector string for "css"
 * @param element HTML element
 * @returns string with CSS selector
 */
export declare function buildContainerSelectorString(element: Element, config: GeneratorConfigOptions, scopeCss: string): string;
/**
 * Check if the given node is a container element and return its type
 * @param node HTML element node
 * @returns container type or undefined if element is not a match
 */
export declare function buildContainerElementType(node: Element): UtamElementType | undefined;
//# sourceMappingURL=container-element.d.ts.map