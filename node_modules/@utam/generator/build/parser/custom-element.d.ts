import { Element } from '../utils/parser-wrapper';
import { UtamElementType, GeneratorConfigOptions } from '@utam/types';
/**
 * Build name of the generated element
 * @param element source HTML element
 * @returns string with name
 */
export declare function buildCustomElementName(element: Element): string;
/**
 * Check if the given node is a custom element and return its type
 * @param node HTML element node
 * @param config generator config
 * @returns custom type or undefined if element is not a match
 */
export declare function buildCustomElementType(node: Element, config: GeneratorConfigOptions): {
    isTraverseContent: boolean;
    generatedType: UtamElementType;
    customTypeShortName: string | undefined;
} | undefined;
/**
 * Build relative selector string for "css"
 * @param element HTML element
 * @returns string with CSS selector
 */
export declare function buildCustomSelectorString(element: Element, config: GeneratorConfigOptions, scopeCss: string): string;
//# sourceMappingURL=custom-element.d.ts.map